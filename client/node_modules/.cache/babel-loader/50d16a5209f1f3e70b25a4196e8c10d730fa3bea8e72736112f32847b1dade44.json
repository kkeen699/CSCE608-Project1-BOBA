{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/myrecipe\";\nclass MyRecipeService {\n  static getAllRecipe() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static getMyRecipe(recipeId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + `/${recipeId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static getRecipeItem(recipeId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + `/${recipeId}/item`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static getMyLiked() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/liked\", {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static addRecipe(recipe) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, {\n      recipe\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static updateRecipe(recipeId, recipe) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL + `/${recipeId}`, {\n      recipe\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static deleteRecipe(recipeId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + `/${recipeId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static addItem(recipeId, items) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + `/${recipeId}/item`, {\n      items\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static deleteItem(recipeId, items) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios({\n      method: 'delete',\n      url: API_URL + `/${recipeId}/item`,\n      data: {\n        items\n      },\n      headers: {\n        Authorization: token\n      }\n    });\n    // return axios.delete(API_URL+`/${recipeId}/item`, {items}, {headers: {Authorization: token}});\n  }\n\n  //   static addFridge(item){\n  //     let token;\n  //     if (localStorage.getItem(\"user\")) {\n  //       token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //     } else {\n  //       token = \"\";\n  //     }\n  //     return axios.post(API_URL, {item}, {headers: {Authorization: token}});\n  //   }\n\n  //   static updateFridge(itemId, qty){\n  //     let token;\n  //     if (localStorage.getItem(\"user\")) {\n  //       token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //     } else {\n  //       token = \"\";\n  //     }\n  //     return axios.put(API_URL+`/${itemId}`, {qty}, {headers: {Authorization: token}});\n  //   }\n\n  //   static deleteFridge(itemId){\n  //     let token;\n  //     if (localStorage.getItem(\"user\")) {\n  //       token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //     } else {\n  //       token = \"\";\n  //     }\n  //     return axios.delete(API_URL+`/${itemId}`, {headers: {Authorization: token}});\n  //   }\n}\nexport default MyRecipeService;","map":{"version":3,"names":["axios","API_URL","MyRecipeService","getAllRecipe","token","localStorage","getItem","JSON","parse","get","headers","Authorization","getMyRecipe","recipeId","getRecipeItem","getMyLiked","addRecipe","recipe","post","updateRecipe","put","deleteRecipe","delete","addItem","items","deleteItem","method","url","data"],"sources":["/home/kcheng/Desktop/CSCE608-Project1-BOBA/client/src/services/myrecipe.service.js"],"sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/myrecipe\";\n\nclass MyRecipeService {\n  \n  static getAllRecipe(){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL, {headers: {Authorization: token}});\n  }\n\n  static getMyRecipe(recipeId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL+`/${recipeId}`, {headers: {Authorization: token}});\n  }\n\n  static getRecipeItem(recipeId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL+`/${recipeId}/item`, {headers: {Authorization: token}});\n  }\n\n  static getMyLiked(){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL+\"/liked\", {headers: {Authorization: token}});\n  }\n\n  static addRecipe(recipe){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, {recipe}, {headers: {Authorization: token}});\n  }\n\n  static updateRecipe(recipeId, recipe){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL+`/${recipeId}`, {recipe}, {headers: {Authorization: token}});\n  }\n\n  static deleteRecipe(recipeId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL+`/${recipeId}`, {headers: {Authorization: token}});\n  }\n\n  static addItem(recipeId, items){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL+`/${recipeId}/item`, {items}, {headers: {Authorization: token}});\n  }\n\n  static deleteItem(recipeId, items){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios({method: 'delete', url: API_URL+`/${recipeId}/item`, data: {items},\n      headers: {Authorization: token}})\n    // return axios.delete(API_URL+`/${recipeId}/item`, {items}, {headers: {Authorization: token}});\n  }\n\n//   static addFridge(item){\n//     let token;\n//     if (localStorage.getItem(\"user\")) {\n//       token = JSON.parse(localStorage.getItem(\"user\")).token;\n//     } else {\n//       token = \"\";\n//     }\n//     return axios.post(API_URL, {item}, {headers: {Authorization: token}});\n//   }\n\n//   static updateFridge(itemId, qty){\n//     let token;\n//     if (localStorage.getItem(\"user\")) {\n//       token = JSON.parse(localStorage.getItem(\"user\")).token;\n//     } else {\n//       token = \"\";\n//     }\n//     return axios.put(API_URL+`/${itemId}`, {qty}, {headers: {Authorization: token}});\n//   }\n\n//   static deleteFridge(itemId){\n//     let token;\n//     if (localStorage.getItem(\"user\")) {\n//       token = JSON.parse(localStorage.getItem(\"user\")).token;\n//     } else {\n//       token = \"\";\n//     }\n//     return axios.delete(API_URL+`/${itemId}`, {headers: {Authorization: token}});\n//   }\n}\n\nexport default MyRecipeService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
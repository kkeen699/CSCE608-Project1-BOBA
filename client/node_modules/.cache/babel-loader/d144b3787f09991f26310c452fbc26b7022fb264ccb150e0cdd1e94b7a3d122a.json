{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/list\";\nclass ListService {\n  static getAll() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static getList(listId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + `/${listId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static addList(name, desc) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, {\n      name,\n      desc\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static updateList(listId, name, desc) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL + `/${listId}`, {\n      name,\n      desc\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static deleteList(listId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + `/${listId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static getItem(listId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + `/${listId}/item`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static addItem(listId, item) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + `/${listId}/item`, {\n      item\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static updateItem(itemId, qty) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL + \"/item\", {\n      id,\n      qty\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  static deleteItem(itemId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + `/${listId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n}\nexport default ListService;","map":{"version":3,"names":["axios","API_URL","ListService","getAll","token","localStorage","getItem","JSON","parse","get","headers","Authorization","getList","listId","addList","name","desc","post","updateList","put","deleteList","delete","addItem","item","updateItem","itemId","qty","id","deleteItem"],"sources":["/home/kcheng/Desktop/CSCE608-Project1-BOBA/client/src/services/list.service.js"],"sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/list\";\n\nclass ListService {\n  \n  static getAll(){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL, {headers: {Authorization: token}});\n  }\n\n  static getList(listId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL+`/${listId}`, {headers: {Authorization: token}});\n  }\n\n  static addList(name, desc){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, {name, desc}, {headers: {Authorization: token}});\n  }\n\n  static updateList(listId, name, desc){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL+`/${listId}`, {name, desc}, {headers: {Authorization: token}});\n  }\n\n  static deleteList(listId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL+`/${listId}`, {headers: {Authorization: token}});\n  }\n\n  static getItem(listId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL+`/${listId}/item`, {headers: {Authorization: token}});\n  }\n\n  static addItem(listId, item){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL+`/${listId}/item`, {item}, {headers: {Authorization: token}});\n  }\n\n  static updateItem(itemId, qty){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL+\"/item\", {id, qty}, {headers: {Authorization: token}});\n  }\n\n  static deleteItem(itemId){\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL+`/${listId}`, {headers: {Authorization: token}});\n  }\n}\n\nexport default ListService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}